buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id 'java'
}

group = pluginGroup
version = pluginVersion

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation project(':queste')
    implementation project(':api')
}

allprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'

    // Will be bumped to Java 16 in Minecraft 1.17
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    repositories {
        maven { url 'https://repo.citizensnpcs.co/' }

        maven {
            name = 'spigotmc-repo'
            url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        }

        maven {
            name = 'papermc-repo'
            url = 'https://papermc.io/repo/repository/maven-public/'
        }

        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/groups/public/'
        }

        // PAPI
        maven {
            url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
        }

        maven {
            name = 'codemc-snapshots'
            url = 'https://repo.codemc.io/repository/maven-snapshots/'
        }

        maven { url 'https://repo.aikar.co/content/groups/aikar/' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://erethon.de/repo' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }

    javadoc.options.encoding = 'UTF-8'

    dependencies {
        testImplementation group: 'junit', name: 'junit', version: '4.5'
        testImplementation 'com.github.seeseemelk:MockBukkit-v1.16:0.5.0'
        testImplementation 'org.reflections:reflections:0.9.12'
    }

    processResources {
        filter ReplaceTokens, tokens: [version: version]
    }

    build.dependsOn javadoc
}

shadowJar {
    relocate 'net.islandearth.languagy', 'com.convallyria.queste.libs.languagy'
    relocate 'co.aikar.commands', 'com.convallyria.queste.libs.acf'
    relocate 'co.aikar.idb', 'com.convallyria.queste.libs.idb'
    relocate 'com.github.stefvanschie.inventoryframework', 'com.convallyria.queste.libs.inventoryframework'
    relocate 'org.bstats', 'com.convallyria.queste.libs.bstats'
    relocate 'io.papermc.lib', 'com.convallyria.queste.libs.paperlib'
}

task aggregatedJavadocs(type: Javadoc, description: "Generate javadocs from all child projects as if it was a single project", group: "Documentation") {
    destinationDir = file("./docs/javadoc")
    title = "$project.name $version API"
    options.author true
    options.links "http://docs.spring.io/spring/docs/4.3.x/javadoc-api/", "http://docs.oracle.com/javase/8/docs/api/", "http://docs.spring.io/spring-ws/docs/2.3.0.RELEASE/api/", "http://docs.spring.io/spring-security/site/docs/4.0.4.RELEASE/apidocs/"
    //options.addStringOption("Xdoclint:none", "-quiet")

    delete("./docs")

    subprojects.each { proj ->
        proj.tasks.withType(Javadoc).each { javadocTask ->
            source += javadocTask.source
            classpath += javadocTask.classpath
            excludes += javadocTask.excludes
            includes += javadocTask.includes
        }
    }
}

build.dependsOn project(':api').build
shadowJar.dependsOn project(':queste').shadowJar
build.dependsOn project(':queste').build
build.dependsOn shadowJar
build.dependsOn aggregatedJavadocs
aggregatedJavadocs.dependsOn javadoc
aggregatedJavadocs.dependsOn project(':api').build
aggregatedJavadocs.dependsOn project(':queste').build

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    filter ReplaceTokens, tokens: [version: version]
}